const fetch = require("node-fetch");
const { cmd } = require("../command");
const { readEnv } = require('../lib/database');

cmd({
  pattern: "tiktoksearch2",
  alias: ["rtik2", "tiks2"],
  desc: "Search for TikTok videos using a query.",
  react: '‚úÖ',
  category: 'search',
  filename: __filename
}, async (conn, m, store, {
  from,
  args,
  reply
}) => {
  // Config ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä LANGUAGE ‡∂ö‡∑í‡∂∫‡∑Ä‡∂±‡∑Ä‡∑è
  const env = await readEnv();
  const language = env.LANGUAGE ? env.LANGUAGE.toLowerCase() : 'english';

  // ‡∂∑‡∑è‡∑Ç‡∑è‡∑Ä ‡∂Ö‡∂±‡∑î‡∑Ä ‡∂¥‡∂´‡∑í‡∑Ä‡∑í‡∂©
  const messages = {
    sinhala: {
      noQuery: "üå∏ TikTok ‡∑Ñ‡∑í ‡∑É‡∑ô‡∑Ä‡∑ì‡∂∏‡∂ß ‡∂î‡∂∂‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∂Ø‡∑ö ‡∂∏‡∑ú‡∂ö‡∂ö‡∑ä‡∂Ø?\n\n*‡∂∑‡∑è‡∑Ä‡∑í‡∂≠ ‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫:*\n.tiktoksearch <query>",
      searching: (query) => ` TikTok ‡∑Ñ‡∑í ‡∑É‡∑ú‡∂∫‡∂∏‡∑í‡∂±‡∑ä: *${query}*`,
      noResults: "‚ùå ‡∂î‡∂∂‡∑ö ‡∑É‡∑ô‡∑Ä‡∑î‡∂∏‡∂ß ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂µ‡∂Ω ‡∑Ñ‡∂∏‡∑î ‡∑Ä‡∑î‡∂´‡∑ö ‡∂±‡∑ê‡∑Ñ‡∑ê. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä keyword ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.",
      failedVideo: (title) => `‚ùå *"${title}"* ‡∑É‡∂≥‡∑Ñ‡∑è ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß ‡∂Ö‡∂¥‡∑ú‡∑Ñ‡∑ú‡∑É‡∂≠‡∑ä ‡∑Ä‡∑î‡∂´‡∑è.`,
      error: "‚ùå TikTok ‡∑É‡∑ô‡∑Ä‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í ‡∑Ä‡∑î‡∂´‡∑è. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂¥‡∑É‡∑î‡∑Ä ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±."
    },
    english: {
      noQuery: "üå∏ What do you want to search on TikTok?\n\n*Usage Example:*\n.tiktoksearch <query>",
      searching: (query) => ` Searching TikTok for: *${query}*`,
      noResults: "‚ùå No results found for your query. Please try with a different keyword.",
      failedVideo: (title) => `‚ùå Failed to retrieve video for *"${title}"*.`,
      error: "‚ùå An error occurred while searching TikTok. Please try again later."
    }
  };

  const msg = messages[language] || messages.english; // ‡∂∑‡∑è‡∑Ç‡∑è‡∑Ä ‡∂ú‡∑ê‡∂Ω‡∂¥‡∑ô‡∂±‡∑ä‡∂± ‡∂¥‡∂´‡∑í‡∑Ä‡∑í‡∂©‡∂∫ ‡∂≠‡∑ù‡∂ª‡∂±‡∑Ä‡∑è. ‡∂±‡∑ê‡∂≠‡∑ä‡∂±‡∂∏‡∑ä English ‡∂∫‡∂±‡∑Ä‡∑è

  if (!args[0]) {
    return reply(msg.noQuery);
  }

  const query = args.join(" ");
  await store.react('‚åõ');

  try {
    reply(msg.searching(query));
    
    const response = await fetch(`https://api.diioffc.web.id/api/search/tiktok?query=${encodeURIComponent(query)}`);
    const data = await response.json();

    if (!data || !data.status || !data.result || data.result.length === 0) {
      await store.react('‚ùå');
      return reply(msg.noResults);
    }

    // Get up to 7 random results
    const results = data.result.slice(0, 20).sort(() => Math.random() - 0.5);

    for (const video of results) {
      const message = `\n`
        + `*‚Ä¢ Title*: ${video.title}\n`;

      if (video.media.no_watermark) {
        await conn.sendMessage(from, {
          video: { url: video.media.no_watermark }, 
          caption: message
        }, { quoted: m });
      } else {
        reply(msg.failedVideo(video.title));
      }
    }

    await store.react('‚úÖ');
  } catch (error) {
    console.error("Error in TikTokSearch command:", error);
    await store.react('‚ùå');
    reply(msg.error);
  }
});
